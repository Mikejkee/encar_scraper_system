# Generated by Django 5.0.2 on 2024-03-18 10:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
                ('telegram_id', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='ID Телеграмм')),
                ('person_fio', models.CharField(blank=True, max_length=200, null=True, verbose_name='ФИО')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, verbose_name='Номер телефона')),
                ('telegram_chat_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID Чата')),
                ('telegram_username', models.CharField(blank=True, max_length=20, null=True, verbose_name='Username аккаунта Телеграмм')),
                ('telegram_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя пользователя Телеграмм')),
                ('telegram_surname', models.CharField(blank=True, max_length=20, null=True, verbose_name='Фамилия пользователя Телеграмм')),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='./postgres_data/objects/persons/background/', verbose_name='Аватар пользователя ')),
            ],
            options={
                'db_table': 'person',
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('whom_created', models.CharField(blank=True, max_length=20, null=True, verbose_name='Создатель')),
                ('addition_information', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
            ],
            options={
                'db_table': 'administrator',
            },
            bases=('authentication.person',),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('addition_information', models.TextField(blank=True, null=True, verbose_name='Дополнительная информация')),
            ],
            options={
                'db_table': 'client',
            },
            bases=('authentication.person',),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('update_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Время обновления')),
                ('flag', models.BooleanField(default=1, verbose_name='Флаг активности')),
                ('role_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Роль')),
            ],
            options={
                'db_table': 'role',
                'indexes': [models.Index(fields=['creation_datetime'], name='index_role_time')],
            },
        ),
        migrations.AddField(
            model_name='person',
            name='role',
            field=models.ManyToManyField(blank=True, related_name='roles', to='authentication.role', verbose_name='Роли'),
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['phone_number'], name='index_persons_phone_number'),
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['telegram_id'], name='index_persons_telegram_id'),
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['creation_datetime'], name='index_person_time'),
        ),
    ]
